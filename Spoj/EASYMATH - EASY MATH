#include <bits/stdc++.h>
/*
 **
 *** Your best is not enough
 **
 */
using namespace std;
#define all(v)          ((v).begin()), ((v).end())
#define finish(x) return cout << x << endl, 0;
#define pb push_back
#define Compiler_Beso ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define clr(v,d)        memset(v, d, sizeof(v))
#define endl '\n'
typedef long long ll;
typedef unsigned long long ull;

void fre(){
    //freopen("","r",stdin);freopen("","w",stdout);
}
ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }
int FixMod(int s,int k){return (s%k+k)%k;}
double dic(pair<int,int>a,pair<int,int>b)
{return (sqrt( (a.first-b.first)*(a.first-b.first) +  (a.second-b.second)* (a.second-b.second) ));}

enum dir       { DOWN = 0, UP, RIGHT, LEFT, DOWN_RIGHT, DOWN_LEFT, UP_RIGHT, UP_LEFT };
int  dir_r[] = { 1, -1, 0, 0, 1, 1, -1, -1 };
int  dir_c[] = { 0, 0, 1, -1, 1, -1, 1, -1 };

//Posibles moves for the Knight
int recorrerA[8]= {-2,-1,1,2,2,1,-1,-2};
int recorrerB[8]= {1,2,2,1,-1,-2,-2,-1};
int n,m,a,d;
int ans=0;
vector<ll>v;
void generate(){
    vector<ll>vv;
    for(ll i=0;i<5;i++)
        vv.pb(a+i*d);
    for(int i=4;i>=0;i--){
        bool f=0;
        for(int j=i-1;j>=0;j--){
            if(vv[i]%vv[j]==0){
                f=1;break;
            }
        }
        if(!f)v.pb(vv[i]);
    }
    reverse(all(v));
}
void rec(int i,vector<ll>vv){
    if(i==v.size()){
        ll lc=1;
        for(int k=0;k<vv.size();k++){
            lc=lcm(lc, vv[k]);
        }
        if(vv.size()){
        if(vv.size()&1){
            ans+=m/lc-(n-1)/lc;
        }
        else
            ans-=m/lc-(n-1)/lc;
        }
        return;
    }
   
    rec(i+1,vv);
     vv.pb(v[i]);
    rec(i+1,vv);
}
int main(){
    
    Compiler_Beso
    
       
    int t;
    cin>>t;
    while (t--) {
        cin>>n>>m>>a>>d;
        if(a==1){
            cout<<0<<endl;
            continue;
        }
        v.clear();
         generate();
        vector<ll>vv;
        ans=0;
        rec(0,vv);
        
        cout<<m-n+1-ans<<endl;
        
    }
    
    
    
    return 0;
    
}






