#include <bits/stdc++.h>
/*
 **
 Success doesn't come to you ,
 You Go To IT .
 **
 */
using namespace std;
#define all(v)          ((v).begin()), ((v).end())
#define finish(x) return cout << x << endl, 0;
#define pb push_back
#define Compiler_Beso ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
#define clr(v,d)        memset(v, d, sizeof(v))
#define endl '\n'
typedef long long ll;
typedef unsigned long long ull;


ll gcd(ll a, ll b) { return !b ? a : gcd(b, a % b); }
ll lcm(ll a, ll b) { return (a / gcd(a, b)) * b; }


enum dir       { DOWN = 0, UP, RIGHT, LEFT, DOWN_RIGHT, DOWN_LEFT, UP_RIGHT, UP_LEFT };
int  dir_r[] = { 1, -1, 0, 0, 1, 1, -1, -1 };
int  dir_c[] = { 0, 0, 1, -1, 1, -1, 1, -1 };
const int N=1e5+5;
int a[N],seg[4 * N];

void build (int p, int l ,int r){
    if(l == r){
        seg[p]= a[l];
        return;
    }
    int mid = (l + r)/2;
    build(p*2, l, mid);
    build(p*2+1, mid+1, r);
    seg[p]=seg[p*2]+seg[p*2+1];
}
int get(int p , int l , int r ,int x , int y){
    if(l>y || r<x)
        return 0;
    if(l>=x && r<=y)
        return seg[p];
    int mid = (l + r)/2;
    return get(p*2 , l , mid ,x , y) + get(p*2+1 , mid+1 , r , x , y);
}
void update(int p, int l, int r, int indx, int v){
    if(l==r){
        seg[p]=a[indx]=v;
        return;
    }
    int mid = (l + r)/2;
    if(indx<=mid)
        update(p*2, l, mid, indx, v);
    else
        update(p*2+1, mid+1, r, indx, v);
     seg[p]=seg[p*2]+seg[p*2+1];
}
int main()
{
    Compiler_Beso
    
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%d",a+i);
    }
    build(1, 0, n-1);
    int q;
    scanf("%d",&q);
    while (q--) {
        int x,y,z;
        scanf("%d%d%d",&x,&y,&z);
        x--;
        if(z==0){y--;
        printf("%d\n",get(1,0,n-1,x,y));
        }
        else{
            update(1, 0, n-1, x, y);
        }
    }
    
 
    
    return 0;
}


